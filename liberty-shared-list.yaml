apiVersion: v1
kind: List
metadata:
  name: liberty-deployment
type: array
items:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: release-name-ibm-websphe
      labels:
        chart: "ibm-websphere-liberty-1.10.0"
        app: release-name-ibm-websphe
        release: "release-name"
        heritage: "Tiller"
    data:
    ###############################################################################
    #  Liberty Fabric
    ###############################################################################
      include-configmap.xml: |-
        <server>
          <include optional="true" location="/etc/wlp/configmap/server.xml"/>
          <include optional="true" location="/etc/wlp/configmap/cluster-ssl.xml"/>
        </server>
      server.xml: |-
        <server>
          <!-- Customize the running configuration. -->
        </server>
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: release-name-ibm-websphe
      labels:
        chart: "ibm-websphere-liberty-1.10.0"
        app: release-name-ibm-websphe
        release: "release-name"
        heritage: "Tiller"
    imagePullSecrets:
      - name: sa-default
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: release-name-ibm-websphe
      labels:
        chart: "ibm-websphere-liberty-1.10.0"
        app: release-name-ibm-websphe
        release: "release-name"
        heritage: "Tiller"
    rules:
    - apiGroups:
      - ""
      resources:
      - endpoints
      - pods
      verbs:
      - get
      - list
    - apiGroups: 
      - ""
      resources:
      - secrets
      verbs:
      - get
      - list
      - watch
      - create
    - apiGroups: 
      - ""
      resources:
      - configmaps
      verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: release-name-ibm-websphe
      labels:
        chart: "ibm-websphere-liberty-1.10.0"
        app: release-name-ibm-websphe
        release: "release-name"
        heritage: "Tiller"
    subjects:
    - kind: ServiceAccount
      name: release-name-ibm-websphe
    roleRef:
      kind: Role
      name: release-name-ibm-websphe
      apiGroup: rbac.authorization.k8s.io
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: release-name-ibm-websphe
      labels:
        chart: "ibm-websphere-liberty-1.10.0"
        app: release-name-ibm-websphe
        release: "release-name"
        heritage: "Tiller"
        prism.app.auto-create: "true"
        razee/watch-resource: "debug"
      annotations:
        prism.subkind: Liberty
        prism.app.auto-create.version: "1.0.0"
        prism.app.auto-create.labels-values: release-name-ibm-websphe
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: release-name-ibm-websphe
      template:
        metadata:
          labels:
            chart: "ibm-websphere-liberty-1.10.0"
            app: release-name-ibm-websphe
            release: "release-name"
            heritage: "Tiller"
            razee/watch-resource: "debug"
          annotations:
            productName: IBM WebSphere Application Server Liberty
            productID: IBMWebSphereLiberty_5724J08_18002_151_00000
            productVersion: 19.0.0.6
        spec:       
          # SLT: 'slt.security.context.pod' from templates/_security-context.tpl
          hostNetwork: false
          hostPID: false
          hostIPC: false
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            fsGroup: 
          volumes:
          - name: liberty-overrides
            configMap:
              name: release-name-ibm-websphe
              items:
              - key: include-configmap.xml
                path: include-configmap.xml
          - name: liberty-config
            configMap:
              name: release-name-ibm-websphe
          serviceAccountName: release-name-ibm-websphe
          affinity:      # https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              # If you specify multiple nodeSelectorTerms associated with nodeAffinity types,
              # then the pod can be scheduled onto a node if one of the nodeSelectorTerms is satisfied.
              #
              # If you specify multiple matchExpressions associated with nodeSelectorTerms,
              # then the pod can be scheduled onto a node only if all matchExpressions can be satisfied.
              #
              # valid operators: In, NotIn, Exists, DoesNotExist, Gt, Lt
                nodeSelectorTerms:
                - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                    - amd64
                    - ppc64le
                    - s390x
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 2
                preference:
                  matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                    - amd64
              - weight: 2
                preference:
                  matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                    - ppc64le
              - weight: 2
                preference:
                  matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                    - s390x
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: app
                      operator: In
                      values:
                      - release-name-ibm-websphe
                    - key: release
                      operator: In
                      values:
                      - "release-name"
                  topologyKey: kubernetes.io/hostname
          containers:
          - name: ibm-websphere-liberty        
            # SLT: 'slt.security.context.container' from templates/_security-context.tpl
            securityContext:
              privileged: false
              readOnlyRootFilesystem: false
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
            readinessProbe:
              httpGet:
                path: /
                port: 9443
                scheme: HTTPS
              initialDelaySeconds: 100
              periodSeconds: 5
              
            livenessProbe:
              httpGet:
                path: /
                port: 9443
                scheme: HTTPS
              initialDelaySeconds: 40
              periodSeconds: 5
            image: "ibmcom/websphere-liberty:javaee8-ubi-min"
            imagePullPolicy: IfNotPresent
            env:
            - name: WLP_LOGGING_CONSOLE_FORMAT
              value: json
            - name: WLP_LOGGING_CONSOLE_LOGLEVEL
              value: info
            - name: WLP_LOGGING_CONSOLE_SOURCE
              value: message,trace,accessLog,ffdc
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: IIOP_ENDPOINT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: HTTPS_PORT
              value: "9443"
            - name : KEYSTORE_REQUIRED 
              value: "true"
            volumeMounts:
            - name: liberty-overrides
              mountPath: /config/configDropins/overrides/include-configmap.xml
              subPath: include-configmap.xml
              readOnly: true
            - name: liberty-config
              mountPath: /etc/wlp/configmap
              readOnly: true
            resources:
          restartPolicy: "Always"
          terminationGracePeriodSeconds: 30
          dnsPolicy: "ClusterFirst"
  - apiVersion: v1
    kind: Service
    metadata:
      name: release-name-ibm-websphe
      annotations:
      labels:
        chart: "ibm-websphere-liberty-1.10.0"
        app: release-name-ibm-websphe
        release: "release-name"
        heritage: "Tiller"
    spec:  
      type: NodePort
      ports:
      - port: 9443
        targetPort: 9443
        protocol: TCP
        name: "https"
      selector:
        app: release-name-ibm-websphe
